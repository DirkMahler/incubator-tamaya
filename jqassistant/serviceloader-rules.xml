<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<jqa:jqassistant-rules xmlns:jqa="http://www.buschmais.com/jqassistant/core/analysis/rules/schema/v1.0">

    <concept id="serviceLoader:SPI">
        <description>Labels all .spi packages as "SPI".</description>
        <cypher><![CDATA[
			MATCH
				(package:Package)-->(type:Type:Java)

			WHERE
				package.name = "spi"

			SET
				type:SPI

			RETURN
				type
        ]]></cypher>
    </concept>

	<constraint id="serviceLoader:correctServiceLoaderNaming">
		<requiresConcept refId="serviceLoader:SPI"/>
		<description>A service provider must be contained in a service provider configuration file with the full qualified binary name of the service's type.</description>
		<cypher><![CDATA[
			MATCH
				(sl:ServiceLoader)-[:CONTAINS]->(impl:Type)-[:IMPLEMENTS]->(spi:SPI)
			WHERE
				NOT (sl)-[:OF_TYPE]->(spi)
			RETURN
				impl.fqn AS impl, spi.fqn as spi, sl.fileName AS spiConfig
        ]]></cypher>
	</constraint>

	<concept id="serviceLoader:PropertyConverter">
		<description>Labels classes implementing "org.apache.tamaya.spi.PropertyConverter" as "PropertyConverter".</description>
		<cypher><![CDATA[
			MATCH
				(impl:Class)-[:IMPLEMENTS]->(propertyConverter:Interface)
			WHERE
				propertyConverter.fqn = "org.apache.tamaya.spi.PropertyConverter"
			SET
				impl:PropertyConverter
			RETURN
				impl
        ]]></cypher>
	</concept>

	<constraint id="serviceLoader:PropertyConverterMustBeRegisteredAsService">
		<requiresConcept refId="serviceLoader:PropertyConverter"/>
		<description>All property converter implementations must be declared in a service loader file.</description>
		<cypher><![CDATA[
			MATCH
				(impl:PropertyConverter)
			WHERE
				NOT (:ServiceLoader)-[:CONTAINS]->(impl)
			RETURN
				impl.fqn as UndeclaredPropertyConverter
        ]]></cypher>
	</constraint>

	<constraint id="serviceLoader:NonExistingServiceImplementation">
		<description>All declared services must reference an existing implementation.</description>
		<cypher><![CDATA[
			MATCH
				(sl:ServiceLoader)-[:CONTAINS]->(service:Type)
			WHERE
				NOT (service:Class)
			RETURN
				sl.fileName as ServiceLoaderFile, service.fqn as NonExistingServiceImplementation
        ]]></cypher>
	</constraint>

</jqa:jqassistant-rules>